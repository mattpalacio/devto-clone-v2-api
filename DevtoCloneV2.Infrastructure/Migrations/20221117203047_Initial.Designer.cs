// <auto-generated />
using System;
using DevtoCloneV2.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DevtoCloneV2.Infrastructure.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20221117203047_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DevtoCloneV2.Core.Entities.Blog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Blogs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "This is the first blog post.",
                            CreatedDate = new DateTime(2022, 11, 17, 20, 30, 47, 838, DateTimeKind.Utc).AddTicks(9813),
                            Title = "Blog Post #1",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Content = "This is the second blog post.",
                            CreatedDate = new DateTime(2022, 11, 17, 20, 30, 47, 838, DateTimeKind.Utc).AddTicks(9814),
                            Title = "Blog Post #2",
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            Content = "This is the third blog post.",
                            CreatedDate = new DateTime(2022, 11, 17, 20, 30, 47, 838, DateTimeKind.Utc).AddTicks(9815),
                            Title = "Blog Post #3",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("DevtoCloneV2.Core.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("JoinedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "matt@email.com",
                            JoinedDate = new DateTime(2022, 11, 17, 20, 30, 47, 838, DateTimeKind.Utc).AddTicks(9757),
                            Username = "matt"
                        },
                        new
                        {
                            Id = 2,
                            Email = "patrick@email.com",
                            JoinedDate = new DateTime(2022, 11, 17, 20, 30, 47, 838, DateTimeKind.Utc).AddTicks(9759),
                            Username = "patrick"
                        },
                        new
                        {
                            Id = 3,
                            Email = "anne@email.com",
                            JoinedDate = new DateTime(2022, 11, 17, 20, 30, 47, 838, DateTimeKind.Utc).AddTicks(9759),
                            Username = "anne"
                        });
                });

            modelBuilder.Entity("DevtoCloneV2.Core.Entities.Blog", b =>
                {
                    b.HasOne("DevtoCloneV2.Core.Entities.User", "User")
                        .WithMany("BlogPosts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DevtoCloneV2.Core.Entities.User", b =>
                {
                    b.Navigation("BlogPosts");
                });
#pragma warning restore 612, 618
        }
    }
}
